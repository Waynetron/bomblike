{"version":3,"sources":["containers.js","entity/Entity.js","constants.js","map/Map.js","entity/entities.js","math.js","map/map-util.js","entity/behaviours.js","entity/weapons.js","map/map-generation.js","turn.js","App.js","serviceWorker.js","index.js"],"names":["shake","css","grow","centered","AppContainer","styled","div","MapContainer","props","undefined","MenuContainer","Overlay","getColour","char","getBackgroundColour","Container","attrs","x","y","solid","style","left","top","zIndex","color","Inner","opacity","width","CELL_SIZE","height","backgroundColor","getBumpClass","status","attacking","getShakeClass","health","Cell","entity","hoverStart","position","className","onMouseEnter","getDisplayChar","ColumnLayout","InfoBox","StatsContainer","Stats","hovered","stats","capacity","power","radius","timer","capacityText","console","log","getCapacityText","powerText","getPowerText","radiusText","getRadiusText","timerText","text","getTimerText","Map","entities","useState","setHovered","isBombBag","MAP_WIDTH","MAP_HEIGHT","onMouseLeave","map","key","id","description","UP","DOWN","LEFT","RIGHT","add","a","b","subtract","shuffle","original","shuffled","i","length","j","Math","floor","random","getEntitiesAt","filter","isEqual","getEntitiesAtPositions","positions","flat","isAdjacentEdge","getAdjacentPositions","getPositionsInDirection","direction","startPosition","distance","scaledDirection","offsetPosition","push","isWalkable","entitiesAtPostion","some","explodeOnDeath","attackActions","type","value","target","cost","spawnActions","flame","attackSelf","walkInALine","facing","faceWalkable","nextPosition","available","randomAvailableDirection","attackPlayer","player","find","traverseStairs","collidingEntities","stairsDown","stairsUp","pickUpWeapons","weapon","newWeapon","use","remove","makeBombBag","bagProps","bombProps","extraBagProps","makeEntity","bomb","starterBombBag","level","max","ceil","weapons","points","numTraits","plentifulCapacity","largeRadius","veryLargeRadius","shortFuse","longFuse","powerful","availableTraits","traits","slice","trait","_id","error","alive","behaviours","actions","actionsPerTurn","findPlayer","wall","breakable","generateLevel","isAdjacentPlayer","adjPosition","unbreakableWall","breakableWall","emptyEntity","makeRoomWithPlayerAndWalls","emptyEntities","shuffledEmptyEntities","numEnemies","pop","enemy","walls","shuffledWalls","staircaseDown","upOrDown","staircase","weaponFactory","move","newPosition","upcoming","placeBomb","newBomb","owner","performActions","newEvents","action","actionPoints","changeLevel","performTurn","prevPosition","behaviour","reverse","initialPlayer","initialEntities","App","setLevel","setEntities","events","setEvents","lose","win","startGame","backToTitle","useCallback","nextLevel","handleKeyDown","event","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","keyToDirection","wait","toLowerCase","restart","everythingElse","Object","values","newEntities","performTurns","useEffect","window","addEventListener","removeEventListener","onClick","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"46DAEA,IAAMA,EAAQC,YAAH,KAqBLC,EAAOD,YAAH,KAUJE,EAAWF,YAAH,KAMDG,EAAeC,IAAOC,IAAV,IACrBH,GAGSI,EAAeF,IAAOC,IAAV,IACrBN,EACAE,EACAC,GACgB,SAAAK,GAAK,OAAIA,EAAMR,MAAQ,mBAAgBS,KAG9CC,EAAgBL,IAAOC,IAAV,IACtBH,GAKSQ,EAAUN,IAAOC,IAAV,K,mmBCnDpB,IAAMM,EAAY,SAACC,GAYjB,MAXgB,CACd,IAAK,UACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,EAAK,SACL,EAAK,UACL,OAAK,UAGQA,IAAS,SAGpBC,EAAsB,SAACD,GAK3B,MAJgB,CACd,IAAK,QACL,IAAK,WAEQA,IAAS,eAGpBE,EAAYV,IAAOC,IAAIU,OAAM,gBAAGC,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGC,EAAT,EAASA,MAAON,EAAhB,EAAgBA,KAAhB,MAA4B,CAC7DO,MAAO,CACLC,KC9BqB,GD8BfJ,EAAgB,KACtBK,IC/BqB,GD+BhBJ,EAAgB,KACrBK,OAAQJ,EAAQ,EAAI,EACpBK,MAAOZ,EAAUC,OALHR,CAAH,KAaToB,EAAQpB,IAAOC,IAAIU,OAAM,gBAAGH,EAAH,EAAGA,KAAH,MAAe,CAC5CO,MAAO,CACLM,QAAkB,SAATb,EAAe,OAAS,MACjCc,MAAOC,OACPC,OAAQD,OACRE,gBAAiBhB,EAAoBD,OAL3BR,CAAH,KAiCL0B,EAAe,SAACC,GACpB,GAAIA,EAAOC,UAAW,CAAC,IAAD,EACLD,EAAOC,UAAfhB,EADa,EACbA,EAAGC,EADU,EACVA,EACV,GAAID,EAAI,EACN,MAAO,YAET,GAAIA,EAAI,EACN,MAAO,aAET,GAAIC,EAAI,EACN,MAAO,UAET,GAAIA,EAAI,EACN,MAAO,YAIX,MAAO,IAGHgB,EAAgB,SAACrB,EAAMsB,GAC3B,MAAa,MAATtB,GAA2B,IAAXsB,EACX,QAGF,IAmCMC,EAfF,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,WACdzB,EAAiDwB,EAAjDxB,KAD8B,EACmBwB,EAA3CE,SAAWtB,EADa,EACbA,EAAGC,EADU,EACVA,EAAIC,EAAyBkB,EAAzBlB,MAAOa,EAAkBK,EAAlBL,OAAQG,EAAUE,EAAVF,OAC9C,OACE,kBAACpB,EAAD,CAAWE,EAAGA,EAAGC,EAAGA,EAAGC,MAAOA,EAAON,KAAMA,GACzC,kBAACY,EAAD,CACEZ,KAAMA,EACN2B,UAAS,UAAKT,EAAaC,GAAlB,YAA6BE,EAAcrB,EAAMsB,IAC1DM,aAAc,kBAAMH,EAAWD,KAE/B,2BA1Be,SAACxB,EAAMsB,GAE5B,MAAa,MAATtB,EACK,IAGI,MAATA,EACK,IAGI,MAATA,EACKsB,EAGFtB,EAYG6B,CAAe7B,EAAMsB,O,o1BE3HjC,ICiCuB3B,EDjCjBmC,EAAetC,IAAOC,IAAV,KAIZC,EAAeF,IAAOC,IAAV,KACP,SAAAE,GAAK,OAAIA,EAAMmB,SACd,SAAAnB,GAAK,OAAIA,EAAMqB,SACZD,GAITgB,EAAUvC,IAAOC,IAAV,KAKF,SAAAE,GAAK,OAAIA,EAAMmB,SAYpBkB,EAAiBxC,IAAOC,IAAV,KAwCdwC,EAAQ,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,IAAKA,IAAYA,EAAQC,MAEvB,OAAO,kBAACH,EAAD,KAAgB,6BAHE,MAMgBE,EAAQC,MAA3CC,EANmB,EAMnBA,SAAUC,EANS,EAMTA,MAAOC,EANE,EAMFA,OAAQC,EANN,EAMMA,MAE3BC,EAnCgB,SAACJ,GACvBK,QAAQC,IAAIN,GAEZ,MADgB,CAAC,GAAI,QAAS,aACfA,EAAW,GAgCLO,CAAgBP,GAC/BQ,EA9Ba,SAACP,GAEpB,MADgB,CAAC,KAAM,WAAY,gBAAiB,wBACrCA,EAAQ,GA4BLQ,CAAaR,GACzBS,EA1Bc,SAACR,GAErB,MADgB,CAAC,KAAM,eAAgB,oBAAqB,4BAC7CA,EAAS,GAwBLS,CAAcT,GAC3BU,EAtBa,SAACT,GACpB,IAAIU,EAAO,KAOX,OANc,IAAVV,IACFU,EAAO,cAEK,IAAVV,IACFU,EAAO,aAEFA,EAcWC,CAAaX,GAE/B,OACA,kBAACP,EAAD,KACE,2BACE,mCACE,IACDQ,GAAgB,0BAAMb,UAAU,SAASa,EAAzB,KACf,IACF,0CACE,KACAI,GAAaE,GAAcE,IAAc,sCACzC,IACDJ,GAAa,0BAAMjB,UAAU,SAASiB,EAAzB,KACZ,IACDE,GAAc,0BAAMnB,UAAU,SAASmB,EAAzB,KACb,IACDE,GAAa,0BAAMrB,UAAU,SAASqB,EAAzB,KACZ,KACAJ,GAAaE,GAAcE,IAAc,0CAwClCG,EAlCH,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACIC,mBAAS,IADb,mBACnBnB,EADmB,KACVoB,EADU,KAEpB7B,EAAa,SAACD,GAClB8B,EAAW9B,IAMP+B,EAAarB,GAAWA,EAAQC,MAEtC,OACE,kBAACL,EAAD,KACE,kBAAC,EAAD,CACEhB,MAAO0C,IACPxC,OAAQyC,IACRC,aAXY,WAChBJ,EAAW,QAYNF,EAASO,KAAI,SAAAnC,GAAM,OAClB,kBAAC,EAAD,CACEA,OAAQA,EACRoC,IAAKpC,EAAOqC,GACZpC,WAAYA,QAIlB,kBAACM,EAAD,CAASjB,MAAO0C,MACZD,GAAa,2BAAIrB,EAAUA,EAAQ4B,YAAc,IAClDP,GAAa,kBAAC,EAAD,CAAOrB,QAASA,O,OEzIxB6B,EAA0B,CAAC3D,EAAG,EAAGC,GAAI,GAAjC2D,EAAqC,CAAC5D,EAAG,EAAGC,EAAG,GAAzC4D,EAA6C,CAAC7D,GAAI,EAAGC,EAAG,GAAlD6D,EAAsD,CAAC9D,EAAG,EAAGC,EAAG,GACjF8D,EAAM,SAACC,EAAGC,GAAJ,MAAW,CAACjE,EAAGgE,EAAEhE,EAAIiE,EAAEjE,EAAGC,EAAG+D,EAAE/D,EAAIgE,EAAEhE,IAC3CiE,EAAW,SAACF,EAAGC,GAAJ,MAAW,CAACjE,EAAGgE,EAAEhE,EAAIiE,EAAEjE,EAAGC,EAAG+D,EAAE/D,EAAIgE,EAAEhE,IAEhDkE,EAAU,SAACC,GAEtB,IADA,IAAMC,EAAQ,YAAOD,GACZE,EAAID,EAASE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC5C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADI,EAEf,CAACD,EAASG,GAAIH,EAASC,IAAnDD,EAASC,GAFkC,KAE9BD,EAASG,GAFqB,KAI9C,OAAOH,G,OCNIO,GAAgB,SAACtD,EAAU0B,GAAX,OAC3BA,EAAS6B,QAAO,SAAAzD,GAAM,OAAI0D,kBAAQ1D,EAAOE,SAAUA,OAExCyD,GAAyB,SAACC,EAAWhC,GAAZ,OACpCgC,EAAUzB,KAAI,SAAAjC,GAAQ,OAAIsD,GAActD,EAAU0B,MAAWiC,QAGlDC,GAAiB,SAAC,GAAD,IAAElF,EAAF,EAAEA,EAAGC,EAAL,EAAKA,EAAL,OACtB,IAAND,GAAiBoD,KAANpD,GAA6B,IAANC,GAAiBoD,KAANpD,GAElCkF,GAAuB,SAAC7D,GAAD,MAAc,CAChDyC,EAAIJ,EAAIrC,GAAWyC,EAAIH,EAAMtC,GAAWyC,EAAIF,EAAMvC,GAAWyC,EAAID,EAAOxC,KAG7D8D,GAA0B,SAACC,EAAWC,EAAeC,EAAUvC,GAE1E,IADA,IAAMgC,EAAY,GACXO,EAAW,GAAG,CACnB,IAAMC,EAAkB,CAACxF,EAAGqF,EAAUrF,EAAIuF,EAAUtF,EAAGoF,EAAUpF,EAAIsF,GAC/DE,EAAiB1B,EAAIuB,EAAeE,GAC1CR,EAAUU,KAAKD,GACfF,GAAY,EAEd,OAAOP,GAGIW,GAAa,SAACrE,EAAU0B,GACnC,IAAM4C,EAAoBhB,GAActD,EAAU0B,GAGlD,OAAiC,IAA7B4C,EAAkBrB,SAKlBqB,EAAkBC,MAAK,SAAAzE,GAAM,OAAIA,EAAOlB,UC5BjC4F,GAAiB,SAAC1E,EAAQ4B,GAAc,IAC5Cd,EAAiBd,EAAjBc,OAAQD,EAASb,EAATa,MAEf,GADAb,EAAOF,QAAU,EACbE,EAAOF,OAAS,EAClB,MAAO,GAEP,IAAM8D,EAAS,sBACVI,GAAwBzB,EAAIvC,EAAOE,SAAUY,IADnC,YAEVkD,GAAwBxB,EAAMxC,EAAOE,SAAUY,IAFrC,YAGVkD,GAAwBvB,EAAMzC,EAAOE,SAAUY,IAHrC,YAIVkD,GAAwBtB,EAAO1C,EAAOE,SAAUY,IAJtC,CAKbd,EAAOE,WAIHyE,EAFmBhB,GAAuBC,EAAWhC,GAEpBO,KAAI,SAAAnC,GAAM,MAC/C,CAAC4E,KAAM,SAAUC,MAAOhE,EAAOiE,OAAQ9E,EAAQ+E,KAAM,MAIjDC,EAAepB,EAAUzB,KAAI,SAAAjC,GAAQ,MACzC,CAAC0E,KAAM,QAASC,MAAO,EAAG7E,OAAQiF,GAAM,CAAC/E,aAAY6E,KAAM,MAE7D,MAAM,GAAN,mBAAWJ,GAAX,YAA6BK,KAIpBE,GAAa,SAAClF,EAAQ4B,GACjC,MAAO,CAAC,CAACgD,KAAM,SAAUC,MAAO,EAAGC,OAAQ9E,EAAQ+E,KAAM,KAG9CI,GAAc,SAACnF,EAAQ4B,GAElC,MAAO,CAAC,CAACgD,KAAM,OAAQX,UADJjE,EAAXoF,OACkCL,KAAM,KAGrCM,GAAe,SAACrF,EAAQ4B,GAAc,IACzCwD,EAAWpF,EAAXoF,OACFE,EAAe3C,EAAI3C,EAAOE,SAAUkF,GAE1C,GAAIb,GAAWe,EAAc1D,GAC3B,MAAO,GAGT,IACM2D,EADWxB,GAAqB/D,EAAOE,UAClBuD,QAAO,SAAAvD,GAAQ,OAAIqE,GAAWrE,EAAU0B,MAGnE,GAAyB,IAArB2D,EAAUpC,OACZ,MAAO,GAbuC,MAgBbJ,EAAQwC,GAApCC,EAhByC,oBAmBhD,MAAO,CAAC,CAACZ,KAAM,OAAQX,UAFFnB,EAAS0C,EAA0BxF,EAAOE,UAEf6E,KAAM,KAG3CU,GAAe,SAACzF,EAAQ4B,GACnC,IACM8D,EADYlC,GAAcxD,EAAOE,SAAU0B,GACxB+D,MAAK,SAAA3F,GAAM,MAAoB,MAAhBA,EAAOxB,QAE/C,OAAIkH,EACK,CAAC,CAACd,KAAM,SAAUC,MAAO,EAAGC,OAAQY,EAAQX,KAAM,IAGpD,IA4BIa,GAAiB,SAAC5F,EAAQ4B,GACrC,IAAMiE,EAAoBrC,GAAcxD,EAAOE,SAAU0B,GACnDkE,EAAaD,EAAkBF,MAAK,SAAA3F,GAAM,MAAoB,MAAhBA,EAAOxB,QACrDuH,EAAWF,EAAkBF,MAAK,SAAA3F,GAAM,MAAoB,MAAhBA,EAAOxB,QAEzD,OAAIsH,EACK,CACL,CAAClB,KAAM,eAAgBC,MAAO,EAAGE,KAAM,IAIvCgB,EACK,CACL,CAACnB,KAAM,eAAgBC,OAAQ,EAAGE,KAAM,IAIrC,IAGIiB,GAAgB,SAAChG,EAAQ4B,GAClB5B,EAAOiG,OACf/F,SAAWF,EAAOE,SAE5B,IACMgG,EADoB1C,GAAcxD,EAAOE,SAAU0B,GACrB+D,MAAK,SAAA3F,GAAM,OAAIA,EAAOmG,OAC1D,OAAKD,GAKLlG,EAAOiG,OAASC,EAChBE,iBAAOxE,GAAU,SAAA5B,GAAM,OAAIA,EAAOqC,KAAO6D,EAAU7D,MAE5C,IAPE,IChILgE,GAAc,SAACC,EAAUC,EAAWC,GAsBxC,OArBeC,GAAW,aACxBjI,KAAM,OACNM,OAAO,EACPgB,OAAQ,IACRc,SAAU0F,EAAS1F,UAAY,EAC/B0B,YAAa,sBACb3B,MAAO,CACLG,OAAQyF,EAAUzF,OAClBD,MAAO0F,EAAU1F,MACjBD,SAAU0F,EAAS1F,SAEnBG,MAAOwF,EAAUzG,QAEnBqG,IAAK,SAACnG,GAAD,MAAa,CAChB4E,KAAM,aACNG,KAAM,EACN2B,KAAMA,GAAK,eAAIH,EAAL,CAAgBrG,SAAUF,EAAOE,eAE1CsG,KA0CMG,GAAiB,SAACC,GAAuB,IAAhBzI,EAAe,uDAAP,GACtCmI,EAAW,CACf1F,SAAUyC,KAAKwD,IAAIxD,KAAKyD,KAAKzD,KAAKE,SAAWqD,EAAQ,KAAO,GAC5DtE,YAAa,uBAETiE,EAAY,CAChBzF,OAAQuC,KAAKyD,KAAKzD,KAAKE,SAAWqD,GAClC9G,OAAQ,EACRe,MAAO,GAET,OAAOwF,GAAYC,EAAUC,EAAWpI,IAGpC4I,GAAU,CA9CiB,SAACH,GAAuB,IAAhBzI,EAAe,uDAAP,GACzC6I,EAAyB,EAAhB3D,KAAKE,SAAeqD,EAC/BK,EAAY,EACZD,EAAS,EACXC,EAAY,EACHD,EAAS,IAClBC,EAAY,GAGd,IAAMC,EAAoB,CAACtG,SAAU,GAC/BuG,EAAc,CAACrG,OAAQ,GACvBsG,EAAkB,CAACtG,OAAQ,GAC3BuG,EAAY,CAACvH,OAAQ,GACrBwH,EAAW,CAACxH,OAAQ,GACpByH,EAAW,CAAC1G,MAAO,GAErByF,EAAW,GACXC,EAAY,GAEViB,EAAkBzE,EAAQ,CAACmE,EAAmBC,EAAaC,EAAiBC,EAAWC,EAAUC,IACjGE,EAASD,EAAgBE,MAAM,EAAGT,GApBc,uBAqBtD,YAAoBQ,EAApB,+CAA4B,CAAC,IAAlBE,EAAiB,QACtBA,IAAUT,EACZZ,EAAQ,eAAOA,EAAP,GAAoBqB,GAG5BpB,EAAS,eAAOA,EAAP,GAAqBoB,IA1BoB,kFA8BtD,OAAOtB,GAAYC,EAAUC,EAAWpI,KJzDtCyJ,GAAM,EAGGnB,GAAa,SAACtI,GAIzB,OAHKA,EAAM+B,UAAUe,QAAQ4G,MAAM,wCAAyC1J,GACxEA,EAAMkE,IAAIpB,QAAQ4G,MAAM,+CAErB,aACLxF,GAPgBuF,KAQhBpJ,KAAM,IACNyH,OAAQ,KACRb,OAAQ,CAACxG,EAAG,EAAGC,EAAG,GAClBiJ,OAAO,EACPhJ,OAAO,EACPiJ,WAAY,GACZC,QAAS,GACTC,eAAgB,EAChBtI,OAAQ,GACRG,OAAQ,EACRwC,YAAa,IACVnE,IAIM+J,GAAa,SAAAtG,GAAQ,OAAIA,EAAS+D,MAAK,SAAA3F,GAAM,MAAoB,MAAhBA,EAAOxB,SAsBxDkI,GAAO,SAACvI,GACnB,OAAOsI,GAAW,aAChBjI,KAAM,IACNM,OAAO,EACPiJ,WAAY,CAACrD,IACbpC,YAAa,sCACbxC,OAAQ,EACRe,MAAO,EACPC,OAAQ,GACL3C,KAIM8G,GAAQ,SAAC9G,GACpB,OAAOsI,GAAW,aAChBjI,KAAM,IACNM,OAAO,EACPiJ,WAAY,CAAC7C,IACbpF,OAAQ,GACL3B,KAuBMgK,GAAO,SAAChK,GAA6B,IAAtBiK,IAAqB,yDAC/C,OAAO3B,GAAW,aAChBjI,KAAM4J,EAAY,IAAM,IACxBtI,OAAQsI,EAAY,EAAI,IACxBtJ,OAAO,EACPwD,YAAY,mBAAD,OAAsB8F,EAAsC,GAA1B,0BAC1CjK,KKtDMkK,GAAgB,SAACzB,EAAOlB,GAOnC,IANA,IL4BqBvH,EK5BfyD,EArCkC,SAAC8D,GAGzC,IAFA,IAAM9D,EAAW,CAAC8D,GAET9G,EAAI,EAAGA,EPVO,GOUQA,GAAK,EAClC,IADsC,IAAD,WAC5BC,GACP,IAAMqB,EAAW,CAACtB,IAAGC,KAErB,GAAI6E,kBAAQxD,EAAUwF,EAAOxF,UAC3B,iBAIF,ILUgB/B,EKTVmK,EADmBvE,GAAqB2B,EAAOxF,UACXyF,MAAK,SAAA4C,GAAW,OAAI7E,kBAAQxD,EAAUqI,MAChF,IAAKzE,GAAe5D,IAAaoI,EAC/B,iBAGF,GAAIxE,GAAe5D,IAActB,EAAI,IAAM,GAAKC,EAAI,IAAM,EAAI,CAC5D,IAAM2J,EAAkBL,GAAK,CAACjI,aAAW,GACzC0B,EAAS0C,KAAKkE,QAEX,GAAInF,KAAKE,SAAW,GAAK,CAC5B,IAAMkF,EAAgBN,GAAK,CAACjI,aAAW,GACvC0B,EAAS0C,KAAKmE,OAEX,CACH,IAAMC,GLLQvK,EKKY,CAAC+B,YLJ1BuG,GAAW,aAChBjI,KAAM,OACNM,OAAO,GACJX,KKECyD,EAAS0C,KAAKoE,KAxBT7J,EAAI,EAAGA,EPVM,GOUUA,GAAK,EAAG,EAA/BA,GA6BX,OAAO+C,EAIU+G,CAA2BjD,GAGtCkD,EAAgBhH,EAAS6B,QAAO,SAAAzD,GAAM,MAAoB,SAAhBA,EAAOxB,QACnDqK,EAAwB9F,EAAQ6F,GAC9BE,EAAazF,KAAKyD,KAAa,KAARF,GACpB1D,EAAI,EAAGA,EAAI4F,EAAY5F,GAAK,EAAG,CACtC,IAAMwF,EAAcG,EAAsBE,MAEpCC,GLmBa7K,EKnBE,CACnB+B,SAAUwI,EAAYxI,ULmBnBuG,GAAW,aAChBjI,KAAM,IACNM,OAAO,EACPiJ,WAAY,CAAC5C,GAAaE,GAAcI,IACxCnD,YAAa,uBACVnE,KKtBHyD,EAAS0C,KAAK0E,GAIhB,IAAMC,EAAQrH,EAAS6B,QAAO,SAAAzD,GAAM,MAAoB,MAAhBA,EAAOxB,QACzC0K,EAAgBnG,EAAQkG,GACxBE,ELoBiB,SAAChL,GAA8B,IAAvBiL,EAAsB,uDAAX,OAC1C,OAAO3C,GAAW,aAChBjI,KAAmB,SAAb4K,EAAsB,IAAM,IAClCtJ,OAAQ,IACRwC,YAAa,oCACVnE,IKzBiBkL,CAAU,CAC9BnJ,SAAUgJ,EAAcH,MAAM7I,WAEhC0B,EAAS0C,KAAK6E,GAEd,IAAK,IAAIjG,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B,IAEM+C,GAASqD,EDSAvG,EAAQgE,IACD,ICVOH,EAAQ,EADpB,CAAC1G,SAAUgJ,EAAcH,MAAM7I,WAEhD0B,EAAS0C,KAAK2B,GAGhB,OAAOrE,GCvEI2H,GAAO,SAACvJ,EAAQ4B,EAAUqC,GACrC,IAAMuF,EAAc,CAClB5K,EAAGoB,EAAOE,SAAStB,EAAIqF,EAAUrF,EACjCC,EAAGmB,EAAOE,SAASrB,EAAIoF,EAAUpF,GAKnC,QADyB2E,GAAcgG,EAAa5H,GAC/B6B,QAAO,SAAAgG,GAAQ,OAAIA,EAAS3K,SAAOqE,OAAS,KAIjEnD,EAAOE,SAAWsJ,GACX,IAGHE,GAAY,SAAC1J,EAAQ4B,EAAU8E,GACnC,IAAMiD,EAAO,eACRjD,EADQ,CAEXxG,SAAUF,EAAOE,SACjB0J,MAAO5J,IAGT4B,EAAS0C,KAAKqF,IAMVE,GAAiB,SAAC7B,EAAShI,EAAQ4B,EAAUkI,GAC/C,KAAM9B,EAAQ7E,OAAS,GAAG,CACxB,IAAM4G,EAAS/B,EAAQe,MAEvB,GAAI/I,EAAOgK,cAAgBD,EAAOhF,KAAlC,CASA,GARE/E,EAAOgK,cAAgBD,EAAOhF,KAKZ,SAAhBgF,EAAOnF,OACT5E,EAAOL,OAAP,SAA2B,GAET,WAAhBoK,EAAOnF,KAAmB,CAAC,IACrBC,EAAkBkF,EAAlBlF,MAAOC,EAAWiF,EAAXjF,OACfA,EAAOhF,QAAU+E,EACjB7E,EAAOL,OAAP,UAA6BmD,EAASgC,EAAO5E,SAAUF,EAAOE,UAC9D4J,EAAUnM,OAAQ,EAKpB,GAHoB,SAAhBoM,EAAOnF,MACT2E,GAAKvJ,EAAQ4B,EAAUmI,EAAO9F,WAEZ,UAAhB8F,EAAOnF,KAAkB,CAAC,IACpB5E,EAAW+J,EAAX/J,OACR4B,EAAS0C,KAAKtE,GAEI,eAAhB+J,EAAOnF,MACT8E,GAAU1J,EAAQ4B,EAAUmI,EAAOrD,MAEjB,SAAhBqD,EAAOnF,OACT5E,EAAOoF,OAAS2E,EAAO9F,WAEL,iBAAhB8F,EAAOnF,OACTkF,EAAUG,aAAc,MAK1BC,GAAc,SAAClK,EAAQ4B,EAAUkI,GAErC9J,EAAOL,OAAS,GAChBK,EAAOgK,aAAehK,EAAOiI,eAG7BjI,EAAOmK,aAAe,CACpBvL,EAAGoB,EAAOE,SAAStB,EACnBC,EAAGmB,EAAOE,SAASrB,GAIrBgL,GAAe7J,EAAOgI,QAAShI,EAAQ4B,EAAUkI,GAGjD9J,EAAOgI,QAAU,GAfkC,2BAkBnD,YAAwBhI,EAAO+H,WAA/B,+CAA2C,CAAC,IACpCC,GAAUoC,EADyB,SACfpK,EAAQ4B,GAAUyI,UAC5CR,GAAe7B,EAAShI,EAAQ4B,EAAUkI,IApBO,oFC5D/CQ,I,MP2BiBnM,EO3BM,CAAC+B,SAAU,CAACtB,EAAG,EAAGC,EAAG,IP4BzC4H,GAAW,aAChBjI,KAAM,IACNM,OAAO,EACPgB,OAAQ,EACRiI,WAAY,CAACnC,GAAgBI,IAC7B1D,YAAa,uBACb2D,OAAQU,GAAe,IACpBxI,KOlCDoM,GAAkBlC,GAFH,EAEgB,eAAmBiC,KA8HzCE,OA5Hf,WAAgB,IAAD,EACa3I,mBALP,GAIN,mBACN+E,EADM,KACC6D,EADD,OAEmB5I,mBAAS0I,IAF5B,mBAEN3I,EAFM,KAEI8I,EAFJ,OAGe7I,mBAAS,IAHxB,mBAGN8I,EAHM,KAGEC,EAHF,KAIPC,GAAQ3C,GAAWtG,GACnBkJ,EAAMlE,EAXK,EAaXmE,EAAY,WAChBN,EAAS,GACTC,EAAYrC,GAAc,EAAD,eAAQiC,OAG7BU,EAAcC,uBAAY,WAC9BR,EAAS,GACTC,EAAYrC,GAAczB,EAAD,eAAY0D,QACpC,CAAC1D,IAEEsE,EAAYD,uBAAY,SAAAvF,GAC5B+E,EAAS7D,EAAQ,GACbA,EAzBW,GA0Bb8D,EAAYrC,GAAczB,EAAQ,EAAGlB,MAEtC,CAACkB,IAaEuE,EAAgBF,uBAAY,SAAAG,GAChC,IAAM1F,EAASwC,GAAWtG,GAClBQ,EAAQgJ,EAARhJ,IACF6B,EAde,SAAC7B,GAQtB,MAPgB,CACdiJ,QAAS,CAACzM,EAAG,EAAGC,GAAI,GACpByM,UAAW,CAAC1M,EAAG,EAAGC,EAAG,GACrB0M,UAAW,CAAC3M,GAAI,EAAGC,EAAG,GACtB2M,WAAY,CAAC5M,EAAG,EAAGC,EAAG,IAGTuD,GAMGqJ,CAAerJ,GAC3BsJ,EAA6B,MAAtBtJ,EAAIuJ,cACXjF,EAA6B,MAAtBtE,EAAIuJ,cACXC,EAAgC,MAAtBxJ,EAAIuJ,cAEpB,GAAc,IAAV/E,IAAgBF,IAAQgF,EAK5B,IAAKZ,IAAOD,IAAUnE,IAAQgF,GAK9B,GAAKhG,EAAL,CASA,GALIzB,GACFsF,GAAK7D,EAAQ9D,EAAUqC,GAIrByC,EAKF,GAJoB9E,EACjB6B,QAAO,SAAAzD,GAAM,MAAoB,MAAhBA,EAAOxB,MAAsC,MAAtBwB,EAAO4J,MAAMpL,QACrD2E,OAEeuC,EAAOO,OAAOrF,SAAU,CACxC,IAAMmJ,EAASrE,EAAOO,OAAOE,IAAIT,GACjCA,EAAOsC,QAAQ1D,KAAKyF,GAIxB,GAAI9F,GAAayH,GAAQhF,EAAM,CAAC,IAAD,EDQP,SAAC9E,GAK3B,IAJA,IAAMkI,EAAY,GACZpE,EAASwC,GAAWtG,GACpBiK,EAAiBC,OAAOC,OAAOnK,GAAU6B,QAAO,SAAAzD,GAAM,OAAIA,EAAOqC,KAAOqD,EAAOrD,MAErF,OAAsBqD,GAAtB,mBAAiCmG,IAAjC,eAAkD,CAA7C,IAAM7L,EAAM,KACfkK,GAAYlK,EAAQ4B,EAAUkI,GAMhC,MAAO,CACLkC,YAHwBF,OAAOC,OAAOnK,GAAU6B,QAAO,SAAAzD,GAAM,OAAIA,EAAOF,OAAS,KAIjFgK,aCrBqCmC,CAAarK,GAAxCoK,EADqB,EACrBA,YAAalC,EADQ,EACRA,UAGrBY,EAAYsB,GACZpB,EAAUd,GAINA,EAAUG,aACZiB,EAAUxF,GAIVkG,GACFb,UAvCAC,SALAD,MA8CD,CAACnJ,EAAUsJ,EAAWF,EAAapE,EAAOiE,EAAMC,IAUnD,OARAoB,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWjB,GAE5B,WACLgB,OAAOE,oBAAoB,UAAWlB,MAEvC,CAACA,IAGF,kBAACpN,EAAD,KACa,IAAV6I,EAEC,kBAACvI,EAAD,KACE,wCACA,4BAAQiO,QAASvB,GAAjB,SAIF,kBAAC7M,EAAD,CAAciC,UAAW,gBAAiBxC,OAAwB,IAAjBgN,EAAOhN,QACpDmN,GAAOD,IACP,kBAACvM,EAAD,KACE,4BAAKwM,EAAM,WAAa,YACxB,4BAAQwB,QAAStB,GAAjB,kBAGJ,kBAAC,EAAD,CAAKpJ,SAAUA,OCvHL2K,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6e94988e.chunk.js","sourcesContent":["import styled, { css } from 'styled-components'\n\nconst shake = css`\n  @keyframes shake {\n    20% {\n      transform: translate3d(4px, -4px, 0);\n    }\n    40% {\n      transform: translate3d(-4px, 4px, 0);\n    }\n    60% {\n      transform: translate3d(4px, 4px, 0);\n    }\n    80% {\n      transform: translate3d(-4px, -4px, 0);\n    }\n  }\n\n  animation-duration: 0.2s;\n  animation-fill-mode: forwards;\n  animation-timing-function: cubic-bezier(.36,.07,.19,.97);\n`\n\nconst grow = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  animation-name: grow;\n  animation-duration: 0.2s;\n  animation-fill-mode: forwards;\n`\n\nconst centered = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const AppContainer = styled.div`\n  ${centered}\n`;\n\nexport const MapContainer = styled.div`\n  ${shake}\n  ${grow}\n  ${centered}\n  animation-name: ${props => props.shake ? 'shake, grow' : undefined};\n`;\n\nexport const MenuContainer = styled.div`\n  ${centered}\n  animation-name: 'shake';\n  flex-direction: column;\n`;\n\nexport const Overlay = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  position: absolute;\n  z-index: 999;\n  background-color: beige;\n  padding: 2rem;\n\n  h2, button {\n    color: #4135ff;\n  }\n\n  button:hover {\n    background-color: #4135ff;\n    border-color: #4135ff;\n    color: beige\n  }\n\n  h2 {\n    font-size: 3rem;\n    line-height: 3rem;\n    margin: 0rem;\n    margin-bottom: 1rem;\n  }\n`;","import React from 'react';\nimport { CELL_SIZE } from '../constants';\nimport styled from 'styled-components'\nimport './Entity.css';\n\nconst getColour = (char) => {\n  const mapping = {\n    '@': '#fffa03',\n    '#': 'black',\n    '+': 'beige',\n    '>': 'yellow',\n    '*': 'yellow',\n    'b': 'yellow',\n    'G': '#4135ff',\n    'ó': 'yellow',\n  }\n  \n  return mapping[char] || 'white';\n}\n\nconst getBackgroundColour = (char) => {\n  const mapping = {\n    '#': 'beige',\n    '+': '#4135ff',\n  }\n  return mapping[char] || 'transparent'\n}\n\nconst Container = styled.div.attrs(({ x, y, solid, char }) => ({\n  style: {\n    left: x * CELL_SIZE + 'px',\n    top: y * CELL_SIZE + 'px',\n    zIndex: solid ? 2 : 1,\n    color: getColour(char),\n  }\n}))`\n  position: relative;\n  width: 0;\n  height: 0;\n`;\n\nconst Inner = styled.div.attrs(({ char }) => ({\n  style: {\n    opacity: char !== '·' ? '100%' : '10%',\n    width: CELL_SIZE + 'px',\n    height: CELL_SIZE + 'px',\n    backgroundColor: getBackgroundColour(char),\n  }\n}))`\n  width: CELL_SIZE;\n  height: CELL_SIZE;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    border: solid 2px white;\n    cursor: pointer;\n    p {\n      color: white;\n    }\n    background-color: navy;\n    opacity: 1;\n  }\n\n  p {\n    display: inline;\n    margin-block-start: 0.2rem;\n    margin-block-end: 0;\n    font-weight: 700;\n  }\n`;\n\nconst getBumpClass = (status)=> {\n  if (status.attacking) {\n    const {x, y} = status.attacking;\n    if (x < 0) {\n      return 'bump-left'\n    }\n    if (x > 0) {\n      return 'bump-right'\n    }\n    if (y < 0) {\n      return 'bump-up'\n    }\n    if (y > 0) {\n      return 'bump-down'\n    }\n  }\n\n  return '';\n}\n\nconst getShakeClass = (char, health)=> {\n  if (char === 'b' && health === 1) {\n    return 'shake';\n  }\n\n  return '';\n}\n\nconst getDisplayChar = (char, health) => {\n\n  if (char === '+') {\n    return '#';\n  }\n\n  if (char === '#') {\n    return '#';\n  }\n\n  if (char === 'b') {\n    return health;\n  }\n\n  return char;\n}\n\nconst Cell = ({entity, hoverStart}) => {\n  const {char, position: {x, y}, solid, status, health} = entity;\n  return (\n    <Container x={x} y={y} solid={solid} char={char}>\n      <Inner\n        char={char}\n        className={`${getBumpClass(status)} ${getShakeClass(char, health)}`}\n        onMouseEnter={() => hoverStart(entity)}\n      >\n        <p>{getDisplayChar(char, health)}</p>\n      </Inner>\n    </Container>\n  )\n}\n\nexport default Cell;","export const CELL_SIZE = 30;\nexport const MAP_WIDTH = 13;\nexport const MAP_HEIGHT = 13;","import React, { useState } from 'react';\nimport styled from 'styled-components'\nimport Entity from '../entity/Entity';\nimport { CELL_SIZE, MAP_WIDTH, MAP_HEIGHT } from '../constants';\n\nconst ColumnLayout = styled.div`\n  flex-direction: column;\n`\n\nconst MapContainer = styled.div`\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  font-size: ${CELL_SIZE / 15}rem;\n  margin-bottom: 1rem;\n`\n\nconst InfoBox = styled.div`\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  display: flex;\n  width: ${props => props.width}px;\n  height: 5rem;\n  p {\n    text-align: center;\n    line-height: 1.5rem;\n    font-size: 1.2rem;\n    color: white;\n    font-weight: 400;\n    margin-top: 0.6rem;\n  }\n`\n\nconst StatsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  span {\n    display: inline-block;\n  }\n  .trait {\n    color: yellow;\n    font-weight: 600;\n  }\n`\n\nconst getCapacityText = (capacity)=> {\n  console.log(capacity);\n  const options = ['', 'large', 'plentiful'];\n  return options[capacity - 1];\n}\n\nconst getPowerText = (power)=> {\n  const options = [null, 'powerful', 'very powerful', 'dangerously powerful']\n  return options[power - 1];\n}\n\nconst getRadiusText = (radius)=> {\n  const options = [null, 'large radius', 'very large radius', 'dangerously large radius'];\n  return options[radius - 1];\n}\n\nconst getTimerText = (timer)=> {\n  let text = null;\n  if (timer === 2) {\n    text = 'short fuse'\n  }\n  if (timer === 5) {\n    text = 'long fuse'\n  }\n  return text;\n}\n\nconst Stats = ({hovered}) => {\n  if (!hovered || !hovered.stats) {\n    // returning empty stats container to prevent the height from shifting\n    return <StatsContainer><p></p></StatsContainer>;\n  }\n\n  const { capacity, power, radius, timer } = hovered.stats;\n\n  const capacityText = getCapacityText(capacity);\n  const powerText = getPowerText(power);\n  const radiusText = getRadiusText(radius);\n  const timerText = getTimerText(timer);\n\n  return (\n  <StatsContainer>\n    <p>\n      <span>A</span>\n      { \" \" }\n      {capacityText && <span className=\"trait\">{capacityText} </span>}\n      { \" \" }\n      <span>bomb bag</span>\n      { \" \" }\n      {(powerText || radiusText || timerText) && <span>with</span>}\n      { \" \" }\n      {powerText && <span className=\"trait\">{powerText} </span>}\n      { \" \" }\n      {radiusText && <span className=\"trait\">{radiusText} </span>}\n      { \" \" }\n      {timerText && <span className=\"trait\">{timerText} </span>}\n      { \" \" }\n      {(powerText || radiusText || timerText) && <span>bombs</span>}\n    </p>\n  </StatsContainer>\n  );\n}\n\nconst Map = ({entities}) => {\n  const [hovered, setHovered] = useState({});\n  const hoverStart = (entity) => {\n    setHovered(entity);\n  }\n  const hoverStop = () => {\n    setHovered(null);\n  }\n\n  const isBombBag = (hovered && hovered.stats);\n\n  return (\n    <ColumnLayout>\n      <MapContainer\n        width={MAP_WIDTH * CELL_SIZE}\n        height={MAP_HEIGHT * CELL_SIZE}\n        onMouseLeave={hoverStop}\n      >\n        {entities.map(entity =>\n          <Entity\n            entity={entity}\n            key={entity.id}\n            hoverStart={hoverStart}\n          />\n        )}\n      </MapContainer>\n      <InfoBox width={MAP_WIDTH * CELL_SIZE}>\n        {!isBombBag && <p>{hovered ? hovered.description : ''}</p>}\n        {isBombBag && <Stats hovered={hovered} />}\n      </InfoBox>\n    </ColumnLayout>\n  )\n}\n\nexport default Map;","import { traverseStairs, walkInALine, faceWalkable, attackPlayer,\n  explodeOnDeath, attackSelf, pickUpWeapons } from '../entity/behaviours';\nimport { starterBombBag } from './weapons';\n\nlet _id = 0;\nconst makeId = ()=> _id++;\n\nexport const makeEntity = (props) => {\n  if (!props.position) console.error('entity was created without a position', props);\n  if (props.id) console.error('Entity should probably not have a custom ID');\n\n  return {\n    id: makeId(),\n    char: '?',\n    weapon: null,\n    facing: {x: 0, y: 0},\n    alive: true,\n    solid: false,\n    behaviours: [],\n    actions: [],\n    actionsPerTurn: 1,\n    status: {},\n    health: 1,\n    description: '',\n    ...props,\n  }\n};\n\nexport const findPlayer = entities => entities.find(entity => entity.char === '@');\n\nexport const empty = (props) => {\n  return makeEntity({\n    char: '·',\n    solid: false,\n    ...props,\n  });\n}\n\nexport const player = (props) => {\n  return makeEntity({\n    char: '@',\n    solid: false,\n    health: 1,\n    behaviours: [traverseStairs, pickUpWeapons],\n    description: \"It's you, the player\",\n    weapon: starterBombBag(1),\n    ...props,\n  })\n};\n\nexport const bomb = (props) => {\n  return makeEntity({\n    char: 'b',\n    solid: true,\n    behaviours: [explodeOnDeath],\n    description: \"You see a bomb. It is set to go off\",\n    health: 3,\n    power: 1,\n    radius: 1,\n    ...props,\n  })\n};\n\nexport const flame = (props) => {\n  return makeEntity({\n    char: '*',\n    solid: false,\n    behaviours: [attackSelf],\n    health: 1,\n    ...props,\n  })\n};\n\nexport const goblin = (props) => {\n  return makeEntity({\n    char: 'G',\n    solid: true,\n    behaviours: [walkInALine, faceWalkable, attackPlayer],\n    description: 'You see a gooblini.',\n    ...props,\n  })\n};\n\nexport const staircase = (props, upOrDown = 'down') => {\n  return makeEntity({\n    char: upOrDown === 'down' ? '>' : '<',\n    health: 999,\n    description: \"You see a staircase leading down\",\n    ...props,\n  })\n};\n\nexport const wall = (props, breakable = true) => {\n  return makeEntity({\n    char: breakable ? '+' : '#',\n    health: breakable ? 1 : 999,\n    solid: true,\n    description: `You see a wall. ${!breakable ? 'It seems unbreakable.' : ''}`,\n    ...props,\n  })\n};","export const [UP, DOWN, LEFT, RIGHT] = [{x: 0, y: -1}, {x: 0, y: 1}, {x: -1, y: 0}, {x: 1, y: 0}]\nexport const add = (a, b) => ({x: a.x + b.x, y: a.y + b.y});\nexport const subtract = (a, b) => ({x: a.x - b.x, y: a.y - b.y});\n\nexport const shuffle = (original) => {\n  const shuffled = [...original];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n}","import { MAP_WIDTH, MAP_HEIGHT } from '../constants';\nimport { UP, DOWN, LEFT, RIGHT, add } from '../math';\nimport { isEqual } from 'lodash';\n\nexport const getEntitiesAt = (position, entities) =>\n  entities.filter(entity => isEqual(entity.position, position));\n\nexport const getEntitiesAtPositions = (positions, entities) => (\n  positions.map(position => getEntitiesAt(position, entities)).flat()\n);\n\nexport const isAdjacentEdge = ({x, y}) =>\n  x === 0 || x === MAP_WIDTH - 1 || y === 0 || y === MAP_HEIGHT - 1;\n\nexport const getAdjacentPositions = (position) => [\n  add(UP, position), add(DOWN, position), add(LEFT, position), add(RIGHT, position)\n];\n\nexport const getPositionsInDirection = (direction, startPosition, distance, entities) => {\n  const positions = [];\n  while (distance > 0) {\n    const scaledDirection = {x: direction.x * distance, y: direction.y * distance};\n    const offsetPosition = add(startPosition, scaledDirection);\n    positions.push(offsetPosition);\n    distance -= 1;\n  }\n  return positions;\n};\n\nexport const isWalkable = (position, entities) => {\n  const entitiesAtPostion = getEntitiesAt(position, entities);\n\n  // nothing there at all\n  if (entitiesAtPostion.length === 0) {\n    return true;\n  }\n\n  // something solid there\n  if (entitiesAtPostion.some(entity => entity.solid)) {\n    return false;\n  }\n\n  // something there, but it can be walked over\n  return true;\n}","/*\nBehaviours are used at the start of a turn to generate a set of actions\n*/\n\nimport { getEntitiesAt, getEntitiesAtPositions, getAdjacentPositions,\n  isWalkable, getPositionsInDirection } from '../map/map-util';\nimport { flame } from './entities';\nimport { UP, DOWN, LEFT, RIGHT, add, subtract, shuffle } from '../math';\nimport { remove } from 'lodash';\n\nexport const explodeOnDeath = (entity, entities) => {\n  const {radius, power} = entity;\n  entity.health -= 1;\n  if (entity.health > 0) {\n    return [];\n  } else {\n    const positions = [\n      ...getPositionsInDirection(UP, entity.position, radius, entities),\n      ...getPositionsInDirection(DOWN, entity.position, radius, entities),\n      ...getPositionsInDirection(LEFT, entity.position, radius, entities),\n      ...getPositionsInDirection(RIGHT, entity.position, radius, entities),\n      entity.position,\n    ];\n    const entitiesToAttack = getEntitiesAtPositions(positions, entities);\n\n    const attackActions = entitiesToAttack.map(entity => (\n      {type: 'attack', value: power, target: entity, cost: 0}\n    ));\n\n    // Spawn fire\n    const spawnActions = positions.map(position => (\n      {type: 'spawn', value: 1, entity: flame({position}), cost: 0}\n    ));\n    return [...attackActions, ...spawnActions];\n  }\n}\n\nexport const attackSelf = (entity, entities) => {\n  return [{type: 'attack', value: 1, target: entity, cost: 0}]\n}\n\nexport const walkInALine = (entity, entities) => {\n  const { facing } = entity;\n  return [{type: 'move', direction: facing, cost: 1}]\n}\n\nexport const faceWalkable = (entity, entities) => {\n  const { facing } = entity;\n  const nextPosition = add(entity.position, facing);\n  // Continue facing the existing direction if nothing is in the way\n  if (isWalkable(nextPosition, entities)) {\n    return [];\n  }\n\n  const adjacent = getAdjacentPositions(entity.position);\n  const available = adjacent.filter(position => isWalkable(position, entities))\n\n  // Surrounded on all sides, do nothing\n  if (available.length === 0) {\n    return [];\n  }\n\n  const [randomAvailableDirection] = shuffle(available);\n  const newDirection = subtract(randomAvailableDirection, entity.position);\n\n  return [{type: 'face', direction: newDirection, cost: 0}];\n}\n\nexport const attackPlayer = (entity, entities) => {\n  const colliding = getEntitiesAt(entity.position, entities);\n  const player = colliding.find(entity => entity.char === '@');\n\n  if (player) {\n    return [{type: 'attack', value: 1, target: player, cost: 0}];\n  }\n\n  return [];\n}\n\nexport const attackAdjacentPlayer = (entity, entities) => {\n  const adjacent = getAdjacentPositions(entity.position);\n  const adjacentEntities = getEntitiesAtPositions(adjacent, entities);\n  const player = adjacentEntities.find(entity => entity.char === '@');\n  if (player) {\n    return [{type: 'attack', value: 1, target: player, cost: 1}];\n  }\n\n  return [];\n}\n\nexport const attackAdjacentPlayerAndDie = (entity, entities) => {\n  const adjacent = getAdjacentPositions(entity.position);\n  const adjacentEntities = getEntitiesAtPositions(adjacent, entities);\n  const player = adjacentEntities.find(entity => entity.char === '@');\n  if (player) {\n    return [\n      {type: 'attack', value: 1, target: player, cost: 1},\n      {type: 'attack', value: 1, target: entity, cost: 1}\n    ];\n  }\n\n  return [];\n}\n\nexport const traverseStairs = (entity, entities) => {\n  const collidingEntities = getEntitiesAt(entity.position, entities);\n  const stairsDown = collidingEntities.find(entity => entity.char === '>');\n  const stairsUp = collidingEntities.find(entity => entity.char === '<');\n\n  if (stairsDown) {\n    return [\n      {type: 'change-level', value: 1, cost: 0},\n    ];\n  }\n\n  if (stairsUp) {\n    return [\n      {type: 'change-level', value: -1, cost: 0},\n    ];\n  }\n\n  return [];\n}\n\nexport const pickUpWeapons = (entity, entities) => {\n  const oldWeapon = entity.weapon;\n  oldWeapon.position = entity.position;\n  \n  const collidingEntities = getEntitiesAt(entity.position, entities);  \n  const newWeapon = collidingEntities.find(entity => entity.use);\n  if (!newWeapon) {\n    return [];\n  }\n\n  // pick up the new weapon\n  entity.weapon = newWeapon;\n  remove(entities, entity => entity.id === newWeapon.id);\n  \n  return [];\n}","import { makeEntity, bomb } from './entities';\nimport { shuffle } from '../math';\n\nconst makeBombBag = (bagProps, bombProps, extraBagProps) => {\n  const weapon = makeEntity({\n    char: 'ó',\n    solid: false,\n    health: 999,\n    capacity: bagProps.capacity || 1,\n    description: 'A standard bomb bag',\n    stats: {\n      radius: bombProps.radius,\n      power: bombProps.power,\n      capacity: bagProps.capacity,\n      // health displayed as timer to users\n      timer: bombProps.health,\n    },\n    use: (entity) => ({\n      type: 'place-bomb',\n      cost: 1,\n      bomb: bomb({...bombProps, position: entity.position})\n    }),\n    ...extraBagProps,\n  });\n\n  return weapon;\n}\n\n// health equates to the number of turns before a bomb explodes\n// capacity is how many bombs can be active at a time\n\nexport const proceduralBombBag = (level, props = {}) => {\n  const points = Math.random() * 3 + level;\n  let numTraits = 1;\n  if (points > 4) {\n    numTraits = 2;\n  } else if (points > 6) {\n    numTraits = 3;\n  }\n\n  const plentifulCapacity = {capacity: 3};\n  const largeRadius = {radius: 2};\n  const veryLargeRadius = {radius: 3};\n  const shortFuse = {health: 2};\n  const longFuse = {health: 5};\n  const powerful = {power: 2};\n  \n  let bagProps = {};\n  let bombProps = {};\n\n  const availableTraits = shuffle([plentifulCapacity, largeRadius, veryLargeRadius, shortFuse, longFuse, powerful]);\n  const traits = availableTraits.slice(0, numTraits);\n  for (const trait of traits) {\n    if (trait === plentifulCapacity) {\n      bagProps = {...bagProps, ...trait}\n    }\n    else {\n      bombProps = {...bombProps, ...trait}\n    }\n  }\n  \n  return makeBombBag(bagProps, bombProps, props);\n}\n\nexport const starterBombBag = (level, props = {}) => {\n  const bagProps = {\n    capacity: Math.max(Math.ceil(Math.random() * level * 0.75), 3),\n    description: 'A standard bomb bag',\n  }\n  const bombProps = {\n    radius: Math.ceil(Math.random() * level),\n    health: 3,\n    power: 1,\n  };\n  return makeBombBag(bagProps, bombProps, props);\n}\n\nconst weapons = [proceduralBombBag];\n\nexport const getRandomWeapon = () => {\n  const shuffled = shuffle(weapons);\n  const weapon = shuffled[0];\n  \n  return weapon;\n}","import { MAP_WIDTH, MAP_HEIGHT } from '../constants';\nimport { makeEntity } from '../entity/entities';\nimport { isAdjacentEdge, getAdjacentPositions, getEntitiesAt } from '../map/map-util';\nimport { empty, staircase, wall, goblin } from '../entity/entities';\nimport { getRandomWeapon } from '../entity/weapons';\nimport { UP, DOWN, LEFT, RIGHT, shuffle } from '../math';\nimport { isEqual } from 'lodash';\n\nexport const makeRoomWithPlayerAndWalls = (player) => {\n  const entities = [player];\n\n  for (let x = 0; x < MAP_WIDTH; x += 1) {\n    for (let y = 0; y < MAP_HEIGHT; y += 1) {\n      const position = {x, y};\n      // don't place anything where the player is\n      if (isEqual(position, player.position)) {\n        continue;\n      }\n\n      // don't place anything next to where the player is unless it is an edge wall\n      const adjacentPositons = getAdjacentPositions(player.position);\n      const isAdjacentPlayer = adjacentPositons.find(adjPosition => isEqual(position, adjPosition));\n      if (!isAdjacentEdge(position) && isAdjacentPlayer) {\n        continue;\n      }\n\n      if (isAdjacentEdge(position) || (x % 2 === 0 && y % 2 === 0)) {\n        const unbreakableWall = wall({position}, false);\n        entities.push(unbreakableWall);\n      }\n      else if (Math.random() > 0.8) {\n        const breakableWall = wall({position}, true);\n        entities.push(breakableWall);\n      }\n      else {\n        const emptyEntity = empty({position});\n        entities.push(emptyEntity);\n      }\n    }\n  }\n\n  return entities;\n}\n\nexport const generateLevel = (level, player) => {\n  const entities = makeRoomWithPlayerAndWalls(player);\n\n  // Add enemies\n  const emptyEntities = entities.filter(entity => entity.char === '·');\n  let shuffledEmptyEntities = shuffle(emptyEntities);\n  const numEnemies = Math.ceil(level * 1.75);\n  for (let i = 0; i < numEnemies; i += 1) {\n    const emptyEntity = shuffledEmptyEntities.pop();\n\n    const enemy = goblin({\n      position: emptyEntity.position,\n    });\n    entities.push(enemy);\n  }\n\n  // Add staircase and weapons underneath breakable walls\n  const walls = entities.filter(entity => entity.char === '+')\n  const shuffledWalls = shuffle(walls);\n  const staircaseDown = staircase({\n    position: shuffledWalls.pop().position\n  });\n  entities.push(staircaseDown);\n\n  for (let i = 0; i < 2; i += 1) {\n    const weaponFactory = getRandomWeapon();\n    const bagProps = {position: shuffledWalls.pop().position};\n    const weapon = weaponFactory(level + 1, bagProps);\n    entities.push(weapon);\n  }\n\n  return entities;\n}","import { findPlayer, bomb } from './entity/entities';\nimport { getEntitiesAt } from './map/map-util';\nimport { subtract } from './math';\n\nexport const move = (entity, entities, direction) => {\n  const newPosition = {\n    x: entity.position.x + direction.x,\n    y: entity.position.y + direction.y\n  }\n\n  // Check if anything is in the way\n  const upcomingEntities = getEntitiesAt(newPosition, entities);\n  if (upcomingEntities.filter(upcoming => upcoming.solid).length > 0) {\n    return false;\n  }\n\n  entity.position = newPosition\n  return true;\n}\n\nconst placeBomb = (entity, entities, bomb) => {\n  const newBomb = {\n    ...bomb,\n    position: entity.position,\n    owner: entity,\n  }\n\n  entities.push(newBomb);\n}\n\n// **IMPORTANT** Perform actions does a lot of sneaky mutation\n// May mutate any entity (either the supplied entity, but also any entity referenced in an action)\n// May push events into newEvents\nconst performActions = (actions, entity, entities, newEvents) => {\n    while(actions.length > 0) {\n      const action = actions.pop();\n\n      if (entity.actionPoints >= action.cost) {\n        entity.actionPoints -= action.cost\n      } else {\n        continue;\n      }\n\n      if (action.type === 'wait') {\n        entity.status['waiting'] = true;\n      }\n      if (action.type === 'attack') {\n        const { value, target } = action;\n        target.health -= value;\n        entity.status['attacking'] = subtract(target.position, entity.position);\n        newEvents.shake = true;\n      }\n      if (action.type === 'move') {\n        move(entity, entities, action.direction)\n      }\n      if (action.type === 'spawn') {\n        const { entity } = action;\n        entities.push(entity);\n      }\n      if (action.type === 'place-bomb') {\n        placeBomb(entity, entities, action.bomb)\n      }\n      if (action.type === 'face') {\n        entity.facing = action.direction;\n      }\n      if (action.type === 'change-level') {\n        newEvents.changeLevel = true;\n      }\n    }\n}\n\nconst performTurn = (entity, entities, newEvents) => {\n  // Reset status\n  entity.status = {};\n  entity.actionPoints = entity.actionsPerTurn;\n\n  // Update prev position for each entity\n  entity.prevPosition = {\n    x: entity.position.x,\n    y: entity.position.y\n  };\n\n  // Perform any exisiting actions (likely just from player input)\n  performActions(entity.actions, entity, entities, newEvents);\n\n  // Clear any remaining existing actions for this turn\n  entity.actions = [];\n\n  // Perform any actions generated from behaviours\n  for (const behaviour of entity.behaviours) {\n    const actions = behaviour(entity, entities).reverse();\n    performActions(actions, entity, entities, newEvents);\n  }\n}\n\nexport const performTurns = (entities)=> {\n  const newEvents = {};\n  const player = findPlayer(entities);\n  const everythingElse = Object.values(entities).filter(entity => entity.id !== player.id);\n\n  for (const entity of [player, ...everythingElse]) {\n    performTurn(entity, entities, newEvents);\n  }\n\n  // Remove anything with 0 health\n  const remainingEntities = Object.values(entities).filter(entity => entity.health > 0);\n\n  return {\n    newEntities: remainingEntities,\n    newEvents\n  };\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { AppContainer, MapContainer, MenuContainer, Overlay } from './containers';\nimport Map from './map/Map';\nimport { generateLevel } from './map/map-generation';\nimport { player, findPlayer } from './entity/entities';\nimport { performTurns, move } from './turn';\nimport './App.css';\n\nconst NUM_LEVELS = 5;\n\nconst initialLevel = 1;\nconst initialPlayer = player({position: {x: 1, y: 1}});\nconst initialEntities = generateLevel(initialLevel, {...initialPlayer})\n\nfunction App() {\n  const [level, setLevel] = useState(initialLevel);\n  const [entities, setEntities] = useState(initialEntities);\n  const [events, setEvents] = useState({});\n  const lose = !findPlayer(entities);\n  const win = level > NUM_LEVELS;\n\n  const startGame = () => {\n    setLevel(1);\n    setEntities(generateLevel(1, {...initialPlayer}));\n  }\n\n  const backToTitle = useCallback(() => {\n    setLevel(0);\n    setEntities(generateLevel(level, {...initialPlayer}));\n  }, [level]);\n\n  const nextLevel = useCallback(player => {\n    setLevel(level + 1);\n    if (level < NUM_LEVELS) {\n      setEntities(generateLevel(level + 1, player));\n    }\n  }, [level]);\n\n  const keyToDirection = (key) => {\n    const mapping = {\n      ArrowUp: {x: 0, y: -1},\n      ArrowDown: {x: 0, y: 1},\n      ArrowLeft: {x: -1, y: 0},\n      ArrowRight: {x: 1, y: 0}\n    }\n\n    return mapping[key];\n  }\n\n  const handleKeyDown = useCallback(event => {\n    const player = findPlayer(entities);\n    const { key } = event;\n    const direction = keyToDirection(key);\n    const wait = key.toLowerCase() === 'z';\n    const bomb = key.toLowerCase() === 'x';\n    const restart = key.toLowerCase() === 'r'\n\n    if (level === 0 && (bomb || wait)) {\n      startGame();\n      return;\n    }\n\n    if ((win || lose) && (bomb || wait)) {\n      backToTitle();\n      return;\n    }\n\n    if (!player) {\n      return;\n    }\n\n    if (direction) {\n      move(player, entities, direction);\n      // player.actions.push({type: 'move', direction, cost: 1})\n    }\n\n    if (bomb) {\n      const numBombsOut = entities\n        .filter(entity => entity.char === 'b' && entity.owner.char === '@')\n        .length;\n      \n      if (numBombsOut < player.weapon.capacity) {\n        const action = player.weapon.use(player);\n        player.actions.push(action);\n      }\n    }\n\n    if (direction || wait || bomb) {\n      const { newEntities, newEvents } = performTurns(entities);\n\n      // Update state\n      setEntities(newEntities);\n      setEvents(newEvents);\n\n      // Apply certain events now\n      // Others like screenshake will react to props change after setEvents is called\n      if (newEvents.changeLevel) {\n        nextLevel(player);\n      }\n    }\n\n    if (restart) {\n      startGame();\n    }\n  }, [entities, nextLevel, backToTitle, level, lose, win]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <AppContainer>\n      {level === 0 ?\n        // Title screen\n        <MenuContainer>\n          <h1>bomblike</h1>\n          <button onClick={startGame}>play</button>\n        </MenuContainer>\n      :\n        // Main game screen\n        <MapContainer className={'map-container'} shake={events.shake === true}>\n          {(win || lose) && (\n            <Overlay>\n              <h2>{win ? 'Success!' : 'You died'}</h2>\n              <button onClick={backToTitle}>Back to title</button>\n            </Overlay>\n          )}\n          <Map entities={entities} />\n        </MapContainer>\n      }\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}